{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/barang/BarangSummary.js","components/barang/BarangList.js","components/dashboard/Dashboard.js","components/barang/BarangDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/barang/CreateBarang.js","store/actions/barangActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/barangReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","cabang","links","to","href","onClick","className","id","SignedOutLinks","state","firebaseReducer","profile","isEmpty","data-target","isLoaded","Notifications","notifications","map","item","key","content","time","toDate","toDateString","BarangSummary","barang","nama","stok","createdAt","BarangList","barangs","compose","firestoreReducer","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","props","doc","authError","authReducer","signIn","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","React","useState","submit","setSubmit","handleChange","e","target","value","uid","onSubmit","preventDefault","htmlFor","onChange","signUp","newUser","getFirestore","firebase","firestore","createUserWithEmailAndPassword","res","user","set","createBarang","userId","add","cabangId","Date","history","tp","push","App","exact","path","component","Dashboard","BarangDetails","SignIn","SignUp","CreateBarang","Boolean","window","location","hostname","initState","action","console","log","message","barangReducer","rootReducer","combineReducers","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rffProps","useFirestoreForProfile","config","userProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d0a56faf.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nfunction SignedInLinks({ signOut, cabang }) {\n  const links = (\n    <>\n      <li>\n        <NavLink to=\"/\">Home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/create\">Barang Baru</NavLink>\n      </li>\n      <li>\n        <a href=\"/#\" onClick={signOut}>\n          SignOut\n        </a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {cabang}\n        </NavLink>\n      </li>\n    </>\n  );\n\n  return (\n    <>\n      <ul className=\"right hide-on-med-and-down\">{links}</ul>\n\n      <ul className=\"sidenav\" id=\"slide-out\">\n        {links}\n      </ul>\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"SIGNIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((res) => {\n        return firestore.collection(\"users\").doc(res.user.uid).set({\n          cabang: newUser.cabang,\n        });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function SignedOutLinks() {\n  const links = (\n    <>\n      <li>\n        <NavLink to=\"/signup\">SignUp</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">SignIn</NavLink>\n      </li>\n    </>\n  );\n\n  return (\n    <>\n      <ul className=\"right hide-on-med-and-down\">{links}</ul>\n\n      <ul className=\"sidenav\" id=\"slide-out\">\n        {links}\n      </ul>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nfunction Navbar({ auth, profile }) {\n  const links = auth.isEmpty ? (\n    <SignedOutLinks />\n  ) : (\n    <SignedInLinks cabang={profile.cabang} />\n  );\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          StokBarang\n        </Link>\n\n        <a href=\"/#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\n          <i className=\"material-icons\">menu</i>\n        </a>\n\n        {auth.isLoaded && links}\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebaseReducer.auth,\n    profile: state.firebaseReducer.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\n\nexport default function Notifications({ notifications }) {\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((item) => (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.cabang} </span>\n                  <span>{item.content} </span>\n                  <span className=\"grey-text date-notifications\">\n                    {item.time.toDate().toDateString()}\n                  </span>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function BarangSummary({ barang }) {\n  return (\n    <div className=\"card z-depth-0 barang-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{barang.nama}</span>\n        <p>Stok: {barang.stok}</p>\n        <p>Posted by {barang.cabang}</p>\n        <p className=\"grey-text\">{barang.createdAt.toDate().toDateString()}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport BarangSummary from \"./BarangSummary\";\nimport { Link } from \"react-router-dom\";\n\nexport default function BarangList({ barangs }) {\n  return (\n    <div className=\"barang-list section\">\n      {barangs &&\n        barangs.map((barang) => (\n          <Link to={`/barang/${barang.id}`} key={barang.id}>\n            <BarangSummary barang={barang} />\n          </Link>\n        ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Notifications from \"./Notifications\";\nimport BarangList from \"../barang/BarangList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Dashboard({ barangs, auth, notifications }) {\n  if (auth.isLoaded && auth.isEmpty) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return (\n    <div className=\"dashboard container\">\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          <BarangList barangs={barangs} />\n        </div>\n        <div className=\"col s12 m5 offset-m1\">\n          <Notifications notifications={notifications} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    barangs: state.firestoreReducer.ordered.barangs,\n    auth: state.firebaseReducer.auth,\n    notifications: state.firestoreReducer.ordered.notifications,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"barangs\", limit: 5, orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 5, orderBy: [\"time\", \"desc\"] },\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction BarangDetails({ barang, auth }) {\n  if (auth.isLoaded && auth.isEmpty) {\n    return <Redirect to=\"/signin\" />;\n  }\n\n  return (\n    <div className=\"container section barang-details\">\n      {barang ? (\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{barang.nama}</span>\n            <p>Stok: {barang.stok}</p>\n          </div>\n          <div className=\"card-action lighten-4 grey-text\">\n            <div>Posted by {barang.cabang}</div>\n            <div>{barang.createdAt.toDate().toDateString()}</div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"container center\">\n          <p>Loading barang ...</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const barangs = state.firestoreReducer.data.barangs;\n  const barang = barangs ? barangs[id] : null;\n\n  return {\n    barang,\n    auth: state.firebaseReducer.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect((props) => [\n    { collection: \"barangs\", doc: props.match.params.id },\n  ])\n)(BarangDetails);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction SignIn({ signIn, authError, auth }) {\n  const [submit, setSubmit] = React.useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    signIn(submit);\n  }\n\n  function handleChange(e) {\n    setSubmit({\n      ...submit,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  if (auth.isLoaded && auth.uid) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <form className=\"white\" onSubmit={handleSubmit}>\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" onChange={handleChange} />\n        </div>\n\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n          <div className=\"red-text center\">\n            {authError && <p>{authError}</p>}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.authReducer.authError,\n    auth: state.firebaseReducer.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nfunction SignUp({ auth, signUp, authError }) {\n  const [submit, setSubmit] = React.useState({\n    email: \"\",\n    password: \"\",\n    cabang: \"\",\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    signUp(submit);\n  }\n\n  function handleChange(e) {\n    setSubmit({\n      ...submit,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  if (auth.isLoaded && auth.uid) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <form className=\"white\" onSubmit={handleSubmit}>\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" onChange={handleChange} />\n        </div>\n\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" onChange={handleChange} />\n        </div>\n\n        <div className=\"input-field\">\n          <label htmlFor=\"cabang\">Cabang</label>\n          <input type=\"text\" id=\"cabang\" onChange={handleChange} />\n        </div>\n\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n          <div className=\"red-text center\">\n            {authError && <p>{authError}</p>}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebaseReducer.auth,\n    authError: state.authReducer.authError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createBarang } from \"../../store/actions/barangActions\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction CreateBarang({ createBarang, auth, history }) {\n  const [submit, setSubmit] = React.useState({\n    nama: \"\",\n    stok: 0,\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createBarang(submit);\n    history.push(\"/\");\n  }\n\n  function handleChange(e) {\n    setSubmit({\n      ...submit,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  if (auth.isLoaded && auth.isEmpty) {\n    return <Redirect tp=\"/signin\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <form className=\"white\" onSubmit={handleSubmit}>\n        <h5 className=\"grey-text text-darken-3\">Tambah Barang</h5>\n\n        <div className=\"input-field\">\n          <label htmlFor=\"nama\">Nama Barang</label>\n          <input type=\"text\" id=\"nama\" onChange={handleChange} />\n        </div>\n\n        <div className=\"input-field\">\n          <label htmlFor=\"stok\">Stok</label>\n          <input type=\"number\" id=\"stok\" onChange={handleChange} />\n        </div>\n\n        <div className=\"input-field\">\n          <button className=\"btn pink lighten-1 z-depth-0\">\n            Tambah Barang\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebaseReducer.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createBarang: (barang) => dispatch(createBarang(barang)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateBarang);\n","export const createBarang = (barang) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make async call\n    const firestore = getFirestore();\n    const cabang = getState().firebaseReducer.profile.cabang;\n    const userId = getState().firebaseReducer.auth.uid;\n\n    firestore\n      .collection(\"barangs\")\n      .add({\n        ...barang,\n        cabang,\n        cabangId: userId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        // and then dispatch\n        dispatch({ type: \"CREATE_BARANG\", barang });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_BARANG_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport BarangDetails from \"./components/barang/BarangDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateBarang from \"./components/barang/CreateBarang\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/barang/:id\" component={BarangDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateBarang} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"SIGNIN_ERROR\":\n      console.log(\"signin error\");\n      return {\n        ...state,\n        authError: \"Login failed\",\n      };\n    case \"SIGNIN_SUCCESS\":\n      console.log(\"signin success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNUP_ERROR\":\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  barangs: [\n    { id: 1, nama: \"Beras Raja Lele\", stok: 20 },\n    { id: 2, nama: \"Gulaku\", stok: 15 },\n    { id: 3, nama: \"Minyak Goreng\", stok: 50 },\n  ],\n};\n\nconst barangReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_BARANG\":\n      console.log(\"created project\", action.barang);\n      return state;\n    case \"CREATE_BARANG_ERROR\":\n      console.log(\"created project error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default barangReducer;\n","import authReducer from \"./authReducer\";\nimport barangReducer from \"./barangReducer\";\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nconst rootReducer = combineReducers({\n  authReducer,\n  barangReducer,\n  firestoreReducer,\n  firebaseReducer,\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBsLhUN64akTd3CR-TTQRmoG5WE6PAzyEY\",\n  authDomain: \"stokbarang-a5ca9.firebaseapp.com\",\n  databaseURL: \"https://stokbarang-a5ca9.firebaseio.com\",\n  projectId: \"stokbarang-a5ca9\",\n  storageBucket: \"stokbarang-a5ca9.appspot.com\",\n  messagingSenderId: \"567346311466\",\n  appId: \"1:567346311466:web:20d716f7f20bb386236e53\",\n  measurementId: \"G-R1ZMCQ560D\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFirestore,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase from \"./config/firebaseConfig\";\nimport \"firebase/firestore\";\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase)\n  )\n);\n\nconst rffProps = {\n  firebase,\n  useFirestoreForProfile: true,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rffProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}